version: '3'
services:
    db:
        container_name: p2p-db
        image: postgres:16
        volumes:
            - ./db/postgres:/var/lib/postgresql/data/
        ports:
            - 5433:5432
        env_file:
            - .env
        networks:
            - network

    redis:
        container_name: p2p-redis
        ports:
            - 6380:6379
        volumes:
            - ./db/redis:/data
        image: redis:7-alpine
        networks:
            - network

    rabbitmq:
        container_name: p2p-rabbitmq
        image: rabbitmq:management
        env_file:
            - .env
        ports:
            - 5672:5672
            - 15672:15672
        networks:
            - network

    web:
        container_name: p2p-web
        restart: always
        build: .
        command: python manage.py runserver 0.0.0.0:8000
        ports:
            - 8000:8000
        env_file:
            - .env
        volumes:
            - ./app:/app
        depends_on:
            - db
            - redis
        networks:
            - network

    celery:
        container_name: p2p-celery
        build:
            context: .
        command: celery -A main worker --loglevel=info
        volumes:
            - ./app:/app
        env_file:
            - .env
        depends_on:
            - web
            - redis
            - rabbitmq
        networks:
            - network

    celery-beat:
        container_name: p2p-celery-beat
        build:
            context: .
        command: celery -A main beat --loglevel=Error
        env_file:
            - .env
        volumes:
            - ./app:/app
        depends_on:
            - celery
        networks:
            - network
            
    flower:
        container_name: p2p-flower
        build:
            context: .
        volumes:
            - ./app:/app
        ports:
            - 5555:5555
        command: sh -c "sleep 4 && celery -A main flower"
        env_file:
            - .env
        depends_on:
            - celery
            - celery-beat
        networks:
            - network

    prometheus:
        container_name: p2p-prometheus
        image: prom/prometheus:v2.30.0
        ports:
            - 9090:9090
        volumes:
            - ./prometheus:/etc/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
        depends_on:
            - flower
        networks:
            - network

    grafana:
        image: grafana/grafana:8.0.6
        ports:
            - 3000:3000
        env_file:
            - .env
        depends_on:
            - prometheus
        networks:
            - network

networks:
  network: